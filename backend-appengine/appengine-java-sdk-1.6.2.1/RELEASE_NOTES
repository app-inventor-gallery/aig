Copyright 2008 Google Inc.
All rights reserved.

App Engine Java SDK - Release Notes

Version 1.6.2
=============
- The Admin Console Datastore Admin has added experimental backup and restore
  functionality. The job occurs within your application and counts against your
  application quota, including Instance Hours, Datastore Ops and Datastore
  Storage.
- Developers can now specify how long a channel token will last until it
  expires, with the default remaining two hours. Channel API quota is now
  measured both in calls to create a channel and the number of hours of channel
  time requested. The maximum hours of quota is the maximum number of channel
  creation calls * 2, so free apps get 200 hours of requested channel token
  time.
- Task Queue API requests now include a X-Appengine-TaskETA header, that can be
  used to measure task delivery latency.
- We have removed the deprecated labs version of the TaskQueue API.
- The default API deadlines for Blobstore API calls have been raised to 15s for
  online and 30s for offline requests, up from 5s.
- The Images API now allows you to stretch an image without maintaining the
  aspect ratio.
    http://code.google.com/p/googleappengine/issues/detail?id=2220
- Mail Quota for App Engine apps that have signed up for billing will only be
  increased after the first payment for the app is processed.
- Fixed an issue where the SDK did not resize images down to 512 pixels by
  default, as it does in production.
- Fixed an issue with the Images API where valid images were returning a
  NotImageError.
    http://code.google.com/p/googleappengine/issues/detail?id=5545

Version 1.6.1
=============
- You can now configure Frontend Instance Classes from your Admin Console's
  application settings page. Three classes are available, with increasing
  memory, CPU limits, and associated cost. By default, all applications use the
  basic frontend instance setting of 128MB memory and 600MHz CPU.
- We've added new functionality to the Log API that will allow you to read your
  application's logs programmatically.
- We are releasing an experimental Conversion API that will allow you to convert
  between document types including .doc, .html, .pdf, images using OCR, and
  more.
- The High Replication Datastore migration utility is now available as a GA
  feature, and is no longer experimental.
- The dev appserver now emits a warning when loading any classes that fall under
  com.google.appengine.repackaged.*.
- Version 2.0.0 of the DataNucleus App Engine plugin is available as an
  experimental download from http://goo.gl/kyQiO. This release
  adds support for JPA2 and JDO3. Installation instructions are available at
  http://goo.gl/ELBL4.
- The Blobstore API now supports the multiple="true" attribute to the HTML input
  tag.
- TaskOptions.Param now implements Serializable.
    http://code.google.com/p/googleappengine/issues/detail?id=3712
- Fixed an issue in the SDK where logging "null" caused a 500 error.
- Fixed an issue with backends where SessionManager might try to save a session
  forever under certain circumstances.
- Fixed an issue where cached static files served to IPs on the DoS blacklist
  consumed bandwidth quota.
    http://code.google.com/p/googleappengine/issues/detail?id=4607

Version 1.6.0
=============
- On November 7th, App Engine will be out of Preview. The new Terms of Service
  and previously announced pricing changes will be in effect. Additionally, all
  paid apps are now covered by our SLA.
    http://code.google.com/appengine/docs/billing.html
- Paid apps can now specify the maximum pending latency for instances and the
  minimum number of idle instances for your application in the Admin Console.
- Task Queue storage has been separated in to its own line item. Previously,
  this was included in Datastore storage.
- We have released an experimental utility, available in the Admin Console, to
  assist in migrating your application to the High Replication datastore. This
  utility allows you to copy the bulk of your data in the background, while the
  source application is still serving. You then need a brief read-only period to
  migrate your application data while you copy the data that has changed from
  the time the original copy started.
- Blobstore, which was previously limited to apps with billing enabled, is now
  available for all apps.
- We have published a new article on Datastore Index Selection and Advanced
  Search which explains our recent improvements to the query planner that make
  exploding indexes unnecessary.
    http://code.google.com/appengine/articles/indexselection.html
- Applications can now receive xmpp error stanzas at /_ah/xmpp/error.
- In the Admin Console data viewer, you can now filter by namespace from a drop
  down menu, if applicable.
- In the Admin Console's Datastore Statistics, we now offer namespace suggest
  for filtering stats.
- Added API functionality for making calls to the Memcache API asynchronously.
- In the Memcache API, getIdentifiable() and putIfUntouched() now support
  batch operations.
- We've added a page, /_ah/admin/capabilitiesstatus, to the dev console that
  allows you to configure the capability state of the local API implementations
  when running locally.
- We've added LocalCapabilitiesServiceTestConfig to the testing API, which
  allows you to configure the capability state of the local API implementations
  in your tests.
- The Datastore API now supports callbacks that can execute before or after
  put() and delete() calls.
- The queue-name argument is now optional for async-session-persistence in
  appengine-web.xml.
- Fixed a ClassNotFound error when using async-session-persistence.
    http://code.google.com/p/googleappengine/issues/detail?id=5774
- Fixed an issue with memcache serialization when using a entity key with a name
  that points to the same reference as the key's parent.
    http://code.google.com/p/googleappengine/issues/detail?id=2088
- Fixed an issue where DoS stats in the Admin Console didn't work for High
  Replication apps.
    http://code.google.com/p/googleappengine/issues/detail?id=5237
- WARNING: Starting with 1.6.1 (our next release, NOT this release), URLFetch
  requests will honor the Accept-Encoding header. If your code sets this header
  then it must be prepared to receive content of the specified type. For more
  information please see
    http://code.google.com/p/googleappengine/issues/detail?id=4978

Version 1.5.5
=============
- We have increased the number of files you can upload with your application to
  from 3,000 to 10,000.
- We have increased the size limit for a single file uploaded to App Engine from
  10MB to 32MB.
- We have increased the Frontend request deadline from 30 seconds to 60 seconds.
- We have increased the online URLFetch maximum deadline from 10 seconds to 60
  seconds. The default deadline remains at 10 seconds. The offline maximum deadline
  for URLFetch remains at 10 minutes.
- We have increased the URLFetch Post payload from 1MB to 5MB.
- App Engine now supports Cross Group (XG) transactions with the High
  Replication Datastore, which allow you to perform transactions across multiple
  entity groups.
    http://code.google.com/appengine/docs/java/datastore/transactions.html
- We have added a graph to the admin console that displays the number of
  instances for which you will be billed.
- In the XMPP API, getPresence() is deprecated in favor of using the inbound
  presence handlers documented in
  http://code.google.com/appengine/docs/java/xmpp/overview.html#Handling_User_Presence.
- Fixed an issue in the Admin Console where the "Run Now" button did not work
  for tasks with a '-' in the name.
- Fixed an issue to provide a better error message when a user tries to parse an
  HttpRequest's input stream more than once in a request.
- Fixed an issue to provide a better error message when using the Mail API to
  send email to an invalid user address.
- Fixed an issue in the SDK where HttpServletRequest.getInputStream().read()
  always returned -1.
    http://code.google.com/p/googleappengine/issues/detail?id=5396
- Fixed an issue where you could not schedule a cron job to run every 100
  minutes.
    http://code.google.com/p/googleappengine/issues/detail?id=5861

Version 1.5.4
=============
- You can now specify the maximum size for a blob in
  BlobstoreService.createUploadUrl().
- Zigzag merge join queries will now continue scanning up to the 30 second
  Datastore query deadline. For zigzag queries that used to generate
  DatastoreNeedIndexException, many will now succeed. A small percentage will
  now instead timeout.
- The SDK datastore viewer in the dev console now displays the number of "Write
  Ops" for each entity. "Write Ops" are the total number of entity and index
  writes that were required to create the entity.
- The Prospective Search API is available in Java for all applications. This API
  is still experimental, so applications will be limited to a maximum of 1000
  subscriptions.
- We made a classloading improvement that we expect to help loading request
  latencies for projects with large numbers of jars.
- Added support for the set_default_version flag to Appcfg.
- The Java Remote API now recognizes the HTTP_X_APPENGINE_INBOUND_APPID. This
  means that the Datastore Admin copy functionality will work when using
  Java's Remote API with the destination app.
- Fixed an issue that incorrectly allowed creation of tasks with whitespace in
  the url.
- Fixed the error message for "transaction not found" to be more descriptive.
- Fixed an issue with the dev appserver's local Blobstore implementation trying
  to modify an immutable collection.
    http://code.google.com/p/googleappengine/issues/detail?id=3081
- Fixed an SDK issue where CONFIG, FINE, FINER, FINEST logging messages were not
  displayed.
    http://code.google.com/p/googleappengine/issues/detail?id=4591


Version 1.5.3
=============
- We've removed the limit on the size of blob uploads using the Blobstore API.
- You can now send emails with any attachment extension that is not included on
  the email attachment extension blacklist.
- Added a getIndexes() method to the DatastoreService to retrieve an
  application's indexes and their corresponding states.
- The development server has been updated to understand the reduced index
  requirements of the 1.5.2 datastore query planner changes.
- The Datastore Admin functionality can now be enabled directly in the Admin
  Console.
- You can now use Remote API to access the services of one App Engine
  application from a different App Engine application.
- The Java Testing APIs now default to UTC if no timezone is specified.
- AppCfg now supports download_app, which will download all files that were
  uploaded from your war directory.
- AppCfg now supports the -V (version) and -A (application) flags.
- Added app_identity api with methods to work with service accounts for
  asserting identity on outbound HTTP calls.
    http://code.google.com/appengine/docs/java/appidentity/overview.html
- Added an improved HRD migration tool that requires a read-only period relative
  to your datastore write rate (as opposed to your datastore size, which is how
  the current version behaves). The tool is not yet generally available.  If you
  are interested in being an early adopter please fill out this form:
  http://goo.gl/3jrXu
- Fixed an issue in the Channel API where jsapi was not served with the correct
  mime type.
- Fixed an issue where blobs could not be uploaded using HTTPS.
- Fixed an issue where GQL didn't allow querying for valid kind names
  containing '.', '-', and ':' by supporting quoted identifiers.
    http://code.google.com/p/googleappengine/issues/detail?id=2584

Version 1.5.2
=============
- You can now specify the minimum pending latency for instances and the maximum
  number of idle instances for your application in the Admin Console.
- The datastore now never requires an exploding index.
    http://code.google.com/appengine/docs/python/datastore/queries.html#Big_Entities_and_Exploding_Indexes
- The SDK will now never suggest indexes with the same property repeated, as
  such indexes are likely to be exploding indexes.
- Datastore stats are now available on a per-namespace basis.
- The queue details page in the Admin Console now contains request header
  details, previous run information, and a task payload viewer.
- You can modify the lease on a task leased from a pull queue using the
  modifyTaskLease() method.
- Pull Task maximum size has been increased to 1MB.
- You can now update the number of available backend instances without needing
  to first stop the backend using the "backend configure" appcfg directive.
- You can now set the "References" and "In-Reply-To" headers with the Mail API.
    http://code.google.com/p/googleappengine/issues/detail?id=2802
- The whitelist has been updated to include support for JSR 105.
- When the SDK throws a DatastoreNeedIndexException for a missing index
  definition, the exception can now be caught.

Version 1.5.1
=============
- The development server's datastore and testing service implementations now
  contains logic that closely replicates the consistency guarantees of the High
  Replication datastore. To use, run the dev_appserver with the flag
  -Ddatastore.default_high_rep_job_policy_unapplied_job_pct=20.
- All user request have an X-AppEngine-Country header which contains the
  ISO-3166-1 alpha-2 country code for the user, based on the IP address of the
  client request.
- The Channel API can now provide user presence, this can be configured by
  adding channel_presence to the list of inbound services for your application.
- The Images API now supports the WebP format.
- You can switch the timezone for App Engine logs in the Admin Console.
  http://code.google.com/p/googleappengine/issues/detail?id=734
- Added javax.xml.ws.Service$Mode to the whitelist.
  http://code.google.com/p/googleappengine/issues/detail?id=4770
- You can configure your application to asynchronously write https session data
  by adding <async-session-persistence enabled="true"/> to your
  appengine-web.xml.
  http://code.google.com/p/googleappengine/issues/detail?id=1692
- The local task queue unit testing API now supports Deferred Tasks.
- Fixed an issue where using reserved URLs did not cause an error in the SDK.
- Fixed an issue where having a backends.xml configuration file caused logging
  to stdout to fail in the SDK.
- Fixed an issue where the Channel API didn't work with non-default versions of
  applications using the High Replication datastore.
- Fixed an issue where the Remote API rtok comparison was broken for some users,
  causing appfcg download data to fail.
- Fixed an issue with the SDK where you could not apply a transform to PNG
  images.
  http://code.google.com/p/googleappengine/issues/detail?id=3458
- When displaying corrupt data in the Admin Console dataviewer, a useful error
  will be displayed, instead of a 500.
  http://code.google.com/p/googleappengine/issues/detail?id=4945
- Fixed an issue with the SDK where non-string index names caused an error upon
  upload.
  http://code.google.com/p/googleappengine/issues/detail?id=5004
- Datanucleus now supports polymorphic relationships.
  http://code.google.com/p/datanucleus-appengine/issues/detail?id=153
- Datanucleus now supports PreparedQuery#countEntities(FetchOptions).
  http://code.google.com/p/datanucleus-appengine/issues/detail?id=225
- Fixed an issue with datanucleus where recursive relation did not work.
  http://code.google.com/p/datanucleus-appengine/issues/detail?id=80

Version 1.5.0.1
===============
- Fixed a bug that caused appengine-jsr107cache-1.5.0.jar to be empty.

Version 1.5.0
=============
- Support for Backends which allow developers to create infrastructure
  components that complement the existing dynamic apps that App Engine already
  provides. Instances of a backend can maintain state, be addressed
  individually, and are not subject to per-request time limits. They can also be
  configured to consume more memory and CPU than ordinary dynamic instances.
- Task Queues support pull mode, allowing for more control over task queue work
  rates. To use pull queues, include the 'mode' element in your queue.xml.
- Pull queues are supported by a REST API, allowing access from outside App
  Engine. To use the REST API, you must also include a valid ACL section
  specifying which users can lease tasks from the pull queue.
- Task Queue payload limits have been increased. Queues support 100KB per task.
  Within App Engine, the new limit is 32 MB per batch of tasks. With the REST
  API the limit is 1 MB per batch.
- HTTP request and response sizes have been increased to 32 MB.
- We have removed the rate quotas for requests, datastore operations,
  memcache operations, and image API operations. Resource quotas still apply.
- When creating new applications, developers will now see the High Replication
  Datastore as the default configuration option.  Developers that still wish to
  use the Master/Slave configuration must explicitly choose this option at
  application creation time.
- The Task Queue maximum configurable processing rate has been increased to
  500/s.
- Modified Dashboard latency graphs to indicate they only include dynamic
  requests.
- We have added two restrictions to the Mail API to improve the reliability
  of the service for all applications.
  - Emails must be sent from email accounts managed by Google (either Gmail or
    a domain signed up for Google Apps).
  - Reduced the number of free recipients per day from 2000 to 100 for new
    applications.
- Fixed an issue where the Javadoc for the File API was not generated.
- Fixed an issue where the API Deadlines were not being enforced in the SDK.
- Fixed an issue with Federated Users causing the Admin Console dataviewer to
  fail.
    http://code.google.com/p/googleappengine/issues/detail?id=384
- Fixed an issue causing SDK URL Fetch not to work behind proxy.
    http://code.google.com/p/googleappengine/issues/detail?id=544
- Fixed an issue deploying an app with version set to 0.
    http://code.google.com/p/googleappengine/issues/detail?id=735
- Improved support for reserving an app id that is a canonicalized version of
  a user's Gmail address.
    http://code.google.com/p/googleappengine/issues/detail?id=1196
- Added a more useful error message for unavailable App Ids.
    http://code.google.com/p/googleappengine/issues/detail?id=1303
- Added clearer error messaging for invalid transactions in the SDK.
    http://code.google.com/p/googleappengine/issues/detail?id=1357
- Added better error messages for cron.xml parsing.
    http://code.google.com/p/googleappengine/issues/detail?id=1490
- Entity constructors are now consistent with KeyFactory constructors.
    http://code.google.com/p/googleappengine/issues/detail?id=1626
- Task Queue names can now include the "_" character.
    http://code.google.com/p/googleappengine/issues/detail?id=1723
- The sender of an email is no longer BCC'd when they are already included in
  the email.
    http://code.google.com/p/googleappengine/issues/detail?id=1907
- Added a more helpful error message when trying to send email to a malformed
  address.
    http://code.google.com/p/googleappengine/issues/detail?id=2386
- The SDK now returns an error if the Content-length header is not included in a
  post request, matching production.
    http://code.google.com/p/googleappengine/issues/detail?id=2512
- Fixed an issue where the wrong type of error was being thrown on HTTP request
  timeout.
    http://code.google.com/p/googleappengine/issues/detail?id=2464
- Fixed an issue where the Admin Console didn't keep the app version viewed
  consistent across actions.
    http://code.google.com/p/googleappengine/issues/detail?id=4023
- Added Javadocs for TaskOptions.taskName().
    http://code.google.com/p/googleappengine/issues/detail?id=4316
- Fixed a typo in the Admin Console on the New App page.
    http://code.google.com/p/googleappengine/issues/detail?id=4620
- Fixed an issue where sending mail from an app registered on the HR datastore
  required the app id be prefaced with s~.
    http://code.google.com/p/googleappengine/issues/detail?id=4671
- Fixed an issue where HTTP POST was broken in the SDK if the Content-Length
  header was specified.
    http://code.google.com/p/googleappengine/issues/detail?id=4836

Version 1.4.3
=============
- Added FileService API that allows writing to and reading from files in
  blobstore.
- You can now specify cron execution for a time interval between a start and end
  time.
- You can now configure the specific application version to which a task queue
  or cron job will send requests.
- The Admin Console Task Queues page now displays a more accurate estimate of
  queue size for queues containing more than 2000 tasks.
- Java applications can enable concurrent request support by setting
  <threadsafe> to True in their appengine-web.xml. This flag indicates that
  request handlers for your app are thread safe and multiple request handlers
  may safely run at the same time in the same memory space for your application.
- Deferred library support now available in Java.
    http://code.google.com/p/googleappengine/issues/detail?id=2381
- Remote API library now available in Java. This can be used in conjunction with
  apps using either the Java or the Python runtime.
- The Java SDK now supports kindless and ancestor only queries.
- Fixed an issue where JAX-WS clients in the SDK could not handle receiving a
  SOAP fault.
- Fixed an issue where the SDK did not support fetching HTTPS URLs.
- Fixed an issue where no link was displayed in the Admin Console blobstore
  viewer for an unnamed blob.
- Fixed an issue where the Admin Console data viewer couldn't edit entities
  with ByteString properties.
    http://code.google.com/p/googleappengine/issues/detail?id=2367
- Fixed an issue where the Admin Console crashed when using a non-ascii
  key_name.
    http://code.google.com/p/googleappengine/issues/detail?id=2451
- The Disable Application admin function has been button-ized.
    http://code.google.com/p/googleappengine/issues/detail?id=4323
- Fixed a regex validation issue in the queue.xml file that caused some uploads
  to break.
    http://code.google.com/p/googleappengine/issues/detail?id=4365
- Fixed an issue where the Java SDK Task Queue did not support 10 minute
  timeouts.
    http://code.google.com/p/googleappengine/issues/detail?id=4564
- Fixed an issue where the Channel API in the SDK didn't properly send messages
  with unicode characters.
    http://code.google.com/p/googleappengine/issues/detail?id=4675

Version 1.4.2
=============
- You can now vacuum datastore indexes with the Java SDK.
- The XMPP API was updated to include presence and allow subscriptions.
- The Task Queue now supports programmatic deleting of tasks.
    http://code.google.com/p/googleappengine/issues/detail?id=2588
- The maximum rate per queue at which tasks are processed has been increased to
  100 task per second.
- The maximum number of concurrent requests for a single queue can be specified
  in the application's queue.xml. This provides an additional easy-to-use form
  of rate limiting. The current number of running tasks is also displayed in
  the Admin Console.
- Metadata queries in the Datastore now support cursors.
- Admin Console logs viewer now displays time as YYYY-MM-DD HH:MM:SS.mmm.
- The Mail API added KML and KMZ files as allowed attachments.
- Added support for verifying the server SSL certificate when making a
  URLFetch request to an HTTPS URL. This will become the default in a future
  release.
- Added a warning when an admin tries to upload a queue.yaml where the number
  of new queues and the number of disabled queues exceeds 100.
- Added a putIfUntouched() method to the Memcache API.
    http://code.google.com/p/googleappengine/issues/detail?id=2139
- Added JAX-WS support for writing SOAP clients and SAAJ support for writing
  SOAP servers. JAX-WS for SOAP servers is not yet supported.
- Fixed an issue where mail from @appid.appspotmail.com did not work when
  sending mail to app admins.
- Fixed an issue where the SDK did not enforce the 100 task limit for the Task
  Queue.
    http://code.google.com/p/googleappengine/issues/detail?id=3296
- Fixed an issue where the Java SDK URLFetch did not support 32MB response
  sizes.
    http://code.google.com/p/googleappengine/issues/detail?id=4215
- Fixed an issues where <jsp-file> mappings in web.xml were broken.
    http://code.google.com/p/googleappengine/issues/detail?id=4216

Version 1.4.1
=============
There were no updates to the Java SDK for the 1.4.1 App Engine release.

Version 1.4.0
=============
- The Always On feature allows applications to pay and keep 3 instances of their
  application always running, which can significantly reduce application
  latency.
- Developers can now enable Warmup Requests. By specifying  a handler in an
  app's appengine-web.xml, App Engine will attempt to send a Warmup Request to
  initialize new instances before a user interacts with it. This can reduce the
  latency an end-user sees for initializing your application.
- The Channel API is now available for all users.
- Task Queue has been officially released, and is no longer an experimental
  feature. The API import paths that use 'labs' have been deprecated. Task queue
  storage will count towards an application's overall storage quota, and will
  thus be charged for.
- The deadline for Task Queue and Cron requests has been raised to 10 minutes.
  Datastore and API deadlines within those requests remain unchanged.
- For the Task Queue, developers can specify task retry-parameters in their
  queue.xml.
- Apps that have enabled billing are allowed up to 100 queues with the Task
  Queue API.
- Metadata Queries on the datastore for datastore kinds, namespaces, and entity
  properties are available.
- URL Fetch allowed response size has been increased, up to 32 MB. Request size
  is still limited to 1 MB.
- The request and response sizes for the Images API have been increased to
  32 MB.
- The total size of Memcache batch operations is increased to 32 MB. The 1 MB
  limit on individual Memcache objects still applies.
- The attachment size for outgoing emails has been increased from 1 MB to 10 MB.
  The size limit for incoming emails is still 10 MB.
- Size and quantity limits on datastore batch get/put/delete operations have
  been removed. Individual entities are still limited to 1 MB, but your app may
  batch as many entities together for get/put/delete calls as the overall
  datastore deadline will allow for.
- When iterating over query results, the datastore will now asynchronously
  prefetch results, reducing latency in many cases by 10-15%.
- The Admin Console Blacklist page lists the top blacklist rejected visitors.
- The automatic image thumbnailing service supports arbitrary crop sizes up to
  1600px.
- Overall average instance latency in the Admin Console is now a weighted
  average over QPS per instance.
- Added a low-level AysncDatastoreService for making calls to the datastore
  asynchronously.
- Added a getBodyAsBytes() method to QueueStateInfo.TaskStateInfo, this returns
  the body of the task state as a pure byte-string.
- The whitelist has been updated to include all classes from javax.xml.soap.
- Fixed an issue sending email to multiple recipients.
    http://code.google.com/p/googleappengine/issues/detail?id=1623
- Revert the default logging level during GWT hosted mode back to INFO.
    http://code.google.com/p/googleappengine/issues/detail?id=4011
- Fixed an issue with OpenId over SSL.
  http://code.google.com/p/googleappengine/issues/detail?id=3393

Version 1.3.8
=============
- You can run task queue tasks immediately from the admin console.
- Added an OutputSettings class to the Images API to specify the JPEG encoding
  quality when running in production.
- Support for login of multiple Google accounts within an app, and longer login
  sessions. For more information see:
    http://www.google.com/support/accounts/bin/answer.py?answer=181599
- In queue.xml, the maximum allowed bucket size is now 100.
- Removed limits on zigzag merge-join queries. Therefore the error "The built-in
  indices are not efficient enough for this query and your data. Please add a
  composite index for this query." will no longer be thrown in most cases,
  enabling more types of queries without indexes.
- The whitelist has been updated to include java.net.InetAddress and some
  interfaces and abstract classes in javax.xml.soap, including
  javax.xml.soap.SOAPMessage.
- Fixed an issue reserving App Ids by owners of emails containing periods,
  multiple cases, and googlemail.com address.
    http://code.google.com/p/googleappengine/issues/detail?id=1196
- Fixed an issue where TaskOptions had no public getters, making testing
  impossible.
    http://code.google.com/p/googleappengine/issues/detail?id=3243
- Fixed an issue on the development server where PNGs were being returned as
  JPEGs.
    http://code.google.com/p/googleappengine/issues/detail?id=3661

Version 1.3.7
=============
- Fixed an SDK issue where calling getServingUrl raised an exception.
    http://code.google.com/p/googleappengine/issues/detail?id=3598

Version 1.3.6
=============
- Multitenancy is now supported in the datastore, allowing better
  compartmentalization of user data.
- Automatic image thumbnailing is now available in the Images API using
  getServingUrl.
- Users can now serve custom static error pages for over_quota, dos_api_denial
  and default cases.
- Results of datastore count() queries and offsets for all datastore queries
  are no longer capped at 1000.
- Added a pause queue button to the task queue details page in the Admin
  Console.
- Historical graphs have been added to all of the dashboard graphs in the Admin
  Console.
- Content-range headers are supported on Blobstore downloads.
- New method to allocate datastore ids in a given range: allocateIdRange()
- The app.yaml format is supported with Java applications.
- Increased several rate limited quotas for free applications.
- Fixed an issue that did not allow forms of over 200,000 bytes to be submitted.
   http://code.google.com/p/googleappengine/issues/detail?id=1608

Version 1.3.5
=============
- Ability to configure the Task Queue storage limit with the
  total-storage-limit field in the queue.xml file.
- Task Queues now support up to 50 qps per queue, up from 50 qps per app.
- Developers can programmatically access Blobs with BlobstoreInputStream, which
  provides an InputStream view of a blob in Blobstore
- Bulkloader transform helpers for lists and hierarchical keys were added.
- remote_api_shell commands can be sent over HTTPS or HTTP.
- Admin Console logs now include information on request time latency.
- The datastore now supports end cursors.
- Fixed an issue where requesting /appstats would not properly direct to
  /appstats/.
- Fixed an issue with inconsistent URL mappings between the SDK and production.
    http://code.google.com/p/googleappengine/issues/detail?id=2598

Version 1.3.4
=============
- Client side bulkloader available with the Python SDK that has a new
  configuration syntax and wizard for easier import/export with the datastore.
  Can be used by enabling remote_api in your Java application
- Applications can now be configured to authenticate with OpenID by selecting
  the OpenID option when creating your application in the admin console
    http://code.google.com/p/googleappengine/issues/detail?id=248
    http://code.google.com/p/googleappengine/issues/detail?id=56
- New API to allow App Engine apps to act as OAuth service providers
    http://code.google.com/p/googleappengine/issues/detail?id=919
- The version update check in the Java SDK now uses https
- Allow full access to javax.el.*
    http://code.google.com/p/googleappengine/issues/detail?id=3157
- Increased the timeout during deployment to 15 minutes
- Fixed an issue with JPA where an illegal cast exception was thrown during the
  fetch of integer fields
- MemcacheService.setNamespace() is deprecated in favor of
  MemcacheServiceFactory.getMemcacheManager(namespace)
- Support in the SDK for Java 1.5 is being deprecated. These warnings now appear
  when starting the SDK

Version 1.3.3.1
===============
- Fixed an issue where servlet filters could cause 404s
    http://code.google.com/p/googleappengine/issues/detail?id=3138

Version 1.3.3
=============
- Added two new system properties com.google.appengine.application.id and
  com.google.appengine.application.version
- DeadlineExceededException is now always thrown before
  HardDeadlineExceededError
- Decreased likelihood of "Too many URLMap" deployment errors for complex
  web apps
- Fixed an error where QuotaService.getCpuTimeInMegaCycles() was returning
  cycles instead of megacycles
- Fixed an issue between differing behavior of jsp in the production and
  development environments
    http://code.google.com/p/googleappengine/issues/detail?id=3022
- Fixed an issue uploading webapps with .tag files
    http://code.google.com/p/googleappengine/issues/detail?id=2902

Version 1.3.2
=============
- New API to read the contents of uploaded Blobs (fetch_data)
    http://code.google.com/p/googleappengine/issues/detail?id=2536
- URLFetch now supports accessing ports 80-90, 440-450, and 1024-65535
- Mail API now allows common document formats as attachments
    http://code.google.com/p/googleappengine/issues/detail?id=494
- The Task Queue API now supports adding multiple tasks in a single call to
  Queue.add()
- Fixed charset handling for inbound emails
    http://code.google.com/p/googleappengine/issues/detail?id=2326
- Fixed issue with compositing background colors in dev_appserver
- New feature in the datastore to specify whether to use strong or eventually
  consistent reads (the default is strong)
- New datastore feature allows setting deadlines for operations
- Increased the maximum Task Queue refill rate from 20/s to 50/s
- Support for IP blacklisting to prevent denial of service (DoS) attacks
- App Stats is now available for the Java SDK in addition to Python
- Fix issue with expiration times not being reset on Put on the Memchache API
    http://code.google.com/p/googleappengine/issues/detail?id=1284
- Fix issue preventing static files from being served when a servlet is mapped to root
    http://code.google.com/p/googleappengine/issues/detail?id=1379

Version 1.3.1
=============
  - Datastore Query Cursors
      http://code.google.com/appengine/docs/java/datastore/queriesandindexes.html#Query_Cursors
  - Transactional Tasks
  - Support for Custom Admin Console pages
  - Java Precompilation is now on by default
      Developers can opt-out of precompilation by setting the flag in
      appengine-web.xml:
      <precompilation-enabled>false</precompilation-enabled>
  - New built-in support for unit testing (see appengine-testing.jar)
      http://code.google.com/appengine/docs/java/tools/localunittesting.html
      http://code.google.com/p/googleappengine/issues/detail?id=326
  - net.sf.jsr107 package included as an alternative to the low-level
    Memcache API
  - javax.annotation.Resource/Resources added to the package whitelist
  - New "month" and "synchronized" syntax for Cron configuration
      http://code.google.com/appengine/docs/java/config/cron.html
  - URLFetch supports asynchronous requests
      http://code.google.com/p/googleappengine/issues/detail?id=1899
  - appcfg.sh uses HTTPS for application deployment
  - appcfg.sh adds request_logs --append
  - Changes to the order queries without a specified sort order are returned
    Only queries that use IN will see different results.
  - Added support for multiple != filters on the same property
  - Improved support for keys-only queries when using IN and != filters
  - Support for ETags, If-matches, If-not-matches HTTP Headers, as well as 304
    status codes now available on static files (not yet available on the
    dev_appserver or Blobstore blobs)
      http://code.google.com/p/googleappengine/issues/detail?id=575
  - Fixed issue where the maximum transform count was enforced for composite
    operations
      http://code.google.com/p/googleappengine/issues/detail?id=1656
  - Fixed issue with whitespace on the end of strings in web.xml
      http://code.google.com/p/googleappengine/issues/detail?id=2242
  - Fixed web.xml <error-page> entries for 404 error codes
      http://code.google.com/p/googleappengine/issues/detail?id=1477
  - Added validation prevent welcome-files with absolute paths
      http://code.google.com/p/googleappengine/issues/detail?id=1249
  - Fixed issue where cancelling a deployment in progress could unintentionally
    corrupt the SDK
      http://code.google.com/p/googleappengine/issues/detail?id=2255
  - Fixed issue with QuotaService.getCpuTimeInMegaCycles() returning 0
      http://code.google.com/p/googleappengine/issues/detail?id=2639
  - Fixed issue where JSP exceptions will be incorrectly cast causing a
    ClassCastException
      http://code.google.com/p/googleappengine/issues/detail?id=1438

Version 1.3.0
=============
  - Support for the new Blobstore API
  - New com.google.appengine.runtime.{version,environment} system properties
    (and a SystemProperty accessor class)
  - New sample applications for GWT 2.0
  - Optimizations for many reflection operations

Version 1.2.8
=============
  - Support for JAXB. JAXB is included in JDK 1.6 (and App Engine's production
    servers). If you're using JDK 1.5 with your local dev_appserver, you will
    need to include the JAXB libraries with your application to use it.
      http://code.google.com/p/googleappengine/issues/detail?id=1267
  - New support for application pre-compilation to reduce the length of
    loading requests. To enable pre-compilation on your application, add this
    flag to your appengine-web.xml:
      <precompilation-enabled>true</precompilation-enabled>
    If you have trouble deploying your application, you should remove this
    flag or set it to false.
  - Added Quota API (com.google.appengine.api.quota) to match Python API.
  - Low-level Memcache API now supports batchIncrement().
  - HTTPResponse object now has getFinalUrl() method for 302 redirects.
    - http://code.google.com/p/googleappengine/issues/detail?id=1464
  - Java Dev Appserver now automatically executes tasks.  If you prefer the
    old behavior where tasks do not automatically execute you can use the
    following flag when starting the server:
      -Dtask_queue.disable_auto_task_execution
  - Additional file extensions permitted when sending mail.
    - http://code.google.com/p/googleappengine/issues/detail?id=494
  - Fixed issue with Java mail handler not processing multipart messages
    correctly.
  - Fixed agent code included in appengine-local-runtime.jar results in
    RuntimeException.
    - http://code.google.com/p/googleappengine/issues/detail?id=2280
  - Fixed issue with sort orders defined on properties that allow multiple
    values.
    - http://code.google.com/p/googleappengine/issues/detail?id=2349
  - Fixed problem with dropped query strings after requiring log-in.
    - http://code.google.com/p/googleappengine/issues/detail?id=2225
  - Removed limitation preventing multiple parameters with the same name.
    - http://code.google.com/p/googleappengine/issues/detail?id=2090
  - Fixed issue with local datastore incorrectly sorting results of ancestor
    queries.
    - http://code.google.com/p/googleappengine/issues/detail?id=2177
  - New Index building status page in the Admin Console
  - Task Queue now supports purging queues, and deleting tasks and queues via
    the Admin Console.
    - http://code.google.com/p/googleappengine/issues/detail?id=2159
    - http://code.google.com/p/googleappengine/issues/detail?id=1740
  - Over Quota HTTP status code changed from 403 to 503, other to 500.
    - http://code.google.com/p/googleappengine/issues/detail?id=961
  - Task Queue now considers all HTTP 2xx status codes to represent success.

For past release notes, visit:
http://code.google.com/p/googleappengine/wiki/SdkForJavaReleaseNotes
